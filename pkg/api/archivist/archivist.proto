// Copyright 2022 The Archivist Contributors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package archivist;

option go_package = "github.com/testifysec/archivist-api/pkg/api/archivist";

message GetBySubjectDigestRequest {
  string algorithm = 1;
  string value = 2;
  string collectionName = 3;
}

message GetBySubjectDigestResponse {
  string gitoid = 1;
  string collectionName = 2;
  repeated string attestations = 3;
}

message GetSubjectsResponse {
  string name = 1;
  map<string, string> digest = 2;
}

message GetSubjectsRequest {
  string envelopeGitoid = 1;
}

service Archivist {
  rpc GetBySubjectDigest(GetBySubjectDigestRequest) returns (stream GetBySubjectDigestResponse);
  rpc GetSubjects(GetSubjectsRequest) returns (stream GetSubjectsResponse);
}

message Chunk {
  bytes chunk = 1;
}

message StoreResponse {
  string gitoid = 1;
}

message GetRequest {
  string gitoid = 1;
}

message GetResponse {
  string gitoid = 1;
  string object = 2;
}

service Collector {
  rpc Store(stream Chunk) returns (StoreResponse);
  rpc Get(GetRequest) returns (stream Chunk);
}
